diff --git a/src/xf86libinput.c b/src/xf86libinput.c
index 5bb6c28..11ecdc1 100644
--- a/src/xf86libinput.c
+++ b/src/xf86libinput.c
@@ -86,6 +86,8 @@
 #endif
 #endif
 
+#define ABSF(x) (x >= 0. ? x : -(x))
+
 struct xf86libinput_driver {
 	struct libinput *libinput;
 	int device_enabled_count;
@@ -1487,6 +1489,34 @@ xf86libinput_handle_motion(InputInfoPtr pInfo, struct libinput_event_pointer *ev
 	xf86PostMotionEventM(dev, Relative, mask);
 }
 
+static void
+xf86libinput_handle_gesture_motion(InputInfoPtr pInfo, struct libinput_event_gesture *event)
+{
+	DeviceIntPtr dev = pInfo->dev;
+	struct xf86libinput *driver_data = pInfo->private;
+	ValuatorMask *mask = driver_data->valuators;
+	double x, y;
+
+	if ((driver_data->capabilities & CAP_POINTER) == 0)
+		return;
+
+	x = libinput_event_gesture_get_dx(event);
+	y = libinput_event_gesture_get_dy(event);
+
+	valuator_mask_zero(mask);
+
+	{
+		double ux, uy;
+
+		ux = libinput_event_gesture_get_dx_unaccelerated(event);
+		uy = libinput_event_gesture_get_dy_unaccelerated(event);
+
+		valuator_mask_set_unaccelerated(mask, 0, x, ux);
+		valuator_mask_set_unaccelerated(mask, 1, y, uy);
+	}
+	xf86PostMotionEventM(dev, Relative, mask);
+}
+
 static void
 xf86libinput_handle_absmotion(InputInfoPtr pInfo, struct libinput_event_pointer *event)
 {
@@ -1828,8 +1858,11 @@ xf86libinput_handle_gesture_swipe(InputInfoPtr pInfo,
 {
 	DeviceIntPtr dev = pInfo->dev;
 	struct xf86libinput *driver_data = pInfo->private;
-	int type;
+	int type, button;
+	double dx, dy, adx, ady;
 	uint32_t flags = 0;
+	uint16_t num_touches = libinput_event_gesture_get_finger_count(event);
+	static double last_dx = 0, last_dy = 0;
 
 	if ((driver_data->capabilities & CAP_GESTURE) == 0)
 		return;
@@ -1837,21 +1870,59 @@ xf86libinput_handle_gesture_swipe(InputInfoPtr pInfo,
 	switch (event_type) {
 		case LIBINPUT_EVENT_GESTURE_SWIPE_BEGIN:
 			type = XI_GestureSwipeBegin;
+
+			if (num_touches == 3) {
+				button = btn_linux2xorg(BTN_LEFT);
+				xf86PostButtonEvent(dev, 0, button, 1, 0, 0);
+			}
+
 			break;
 		case LIBINPUT_EVENT_GESTURE_SWIPE_UPDATE:
 			type = XI_GestureSwipeUpdate;
+
+			if (num_touches == 3) {
+				xf86libinput_handle_gesture_motion(pInfo, event);
+			} else {
+				last_dx = libinput_event_gesture_get_dx(event);
+				last_dy = libinput_event_gesture_get_dy(event);
+			}
+
 			break;
 		case LIBINPUT_EVENT_GESTURE_SWIPE_END:
 			type = XI_GestureSwipeEnd;
 			if (libinput_event_gesture_get_cancelled(event))
 			    flags |= XIGestureSwipeEventCancelled;
+
+			if (num_touches == 3) {
+				button = btn_linux2xorg(BTN_LEFT);
+				xf86PostButtonEvent(dev, 0, button, 0, 0, 0);
+			} else {
+				/* Four finger swipe */
+				dx = last_dx;
+				dy = last_dy;
+				adx = ABSF(dx);
+				ady = ABSF(dy);
+
+				if (adx > ady) {
+					/* left */
+					button = btn_linux2xorg(BTN_FORWARD);
+					if (dx > 0.) /* right */
+						button = btn_linux2xorg(BTN_BACK);
+
+					xf86PostButtonEvent(dev, 0, button, 1, 0, 0);
+					xf86PostButtonEvent(dev, 0, button, 0, 0, 0);
+				} else {
+					/* up or down TODO */
+				}
+			}
+
 			break;
 		default:
 			return;
 	}
 
 	xf86PostGestureSwipeEvent(dev, type,
-				  libinput_event_gesture_get_finger_count(event),
+				  num_touches,
 				  flags,
 				  libinput_event_gesture_get_dx(event),
 				  libinput_event_gesture_get_dy(event),
